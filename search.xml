<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ElementUI给循环表单项添加prop校验</title>
    <url>/2020/05/19/ElementUI%E7%BB%99%E5%BE%AA%E7%8E%AF%E8%A1%A8%E5%8D%95%E9%A1%B9%E6%B7%BB%E5%8A%A0prop%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<p>场景：饿了么表单项是循环生成的，但是需要给这些表单项都加上校验（校验规则相同），下面是一个循环生成1~12月份的输入框表单项的表单示例，代码如下：</p>
<a id="more"></a>

<p>template</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-col</span> <span class="attr">v-for</span>=<span class="string">"(item, key) in fieldArr"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">:label</span>=<span class="string">"key + 1 + '月'"</span> <span class="attr">:prop</span>=<span class="string">"'fieldArr.' + key"</span> <span class="attr">:rules</span>=<span class="string">"rules.field"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"fieldArr[key]"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>rules</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        fieldArr: <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">12</span>),</span><br><span class="line">        rules: &#123;</span><br><span class="line">            field: [</span><br><span class="line">                &#123;</span><br><span class="line">                    required: <span class="literal">true</span>,</span><br><span class="line">                    message: <span class="string">'请输入当月数据'</span>,</span><br><span class="line">                    trigger: <span class="string">'blur'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><p>prop要和v-model绑定的数据一致（写法会不一样，看代码示例），上面的fieldArr是一个初始化为12个长度的一维数组</p>
</li>
<li><p>因为prop要绑定这个一维数组的第0、1、2、3…11号位上的元素，fieldArr是固定的，变化的只是fieldArr后面的数值（<code>field[1]、field[2]</code> 等），所以fieldArr是一个字符串，并且要加一个”<code>.</code>“，拼接一个循环的索引值（情景中的key），注意这里不能直接用<code>:prop=&quot;field[key]&quot;</code></p>
</li>
<li><p>要给循环的表单项单独绑定rules，绑定格式为：<code>rules.xxx</code>（xxx是校验项。如果是静态生成的表单项只需要在form标签中绑定rules，在表单项中绑定prop即可）</p>
</li>
</ol>
]]></content>
      <categories>
        <category>ElementUI</category>
      </categories>
  </entry>
  <entry>
    <title>elementUI下拉选择框选项是对象时的存取值逻辑</title>
    <url>/2020/06/08/elementUI%E4%B8%8B%E6%8B%89%E9%80%89%E6%8B%A9%E6%A1%86%E9%80%89%E9%A1%B9%E6%98%AF%E5%AF%B9%E8%B1%A1%E6%97%B6%E7%9A%84%E5%AD%98%E5%8F%96%E5%80%BC%E9%80%BB%E8%BE%91/</url>
    <content><![CDATA[<p>场景：如果下拉框的选项数据是一个对象数组的话，并且后台需要保存对象中的好几个字段，该如何存取值</p>
<a id="more"></a>

<p>举例：假设选项数据是类似于下面这种对象数组的JSON格式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">objArr = [</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="string">'1'</span>,</span><br><span class="line">        name: <span class="string">'语文'</span>,</span><br><span class="line">        grade: <span class="string">'三年级'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id: <span class="string">'2'</span>,</span><br><span class="line">        name: <span class="string">'数学'</span>,</span><br><span class="line">        grade: <span class="string">'三年级'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>这里如果下拉选项只需展示name值，但保存的时候需要同时把id和name传给后台，该怎么做</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-form-item prop&#x3D;&quot;subject&quot; label&#x3D;&quot;科目&quot;&gt;</span><br><span class="line">        &#x2F;&#x2F; 注意 value-key 与 下面的 key 绑定的是同一个字段， 区别是一个不需要冒号，一个需要冒号</span><br><span class="line">        &lt;el-select v-model&#x3D;&quot;form.chooseObj&quot; value-key&#x3D;&quot;id&quot; placeholder&#x3D;&quot;请选择&quot; class&#x3D;&quot;border-bottom&quot;&gt;</span><br><span class="line">            &lt;el-option :label&#x3D;&quot;item.name&quot; </span><br><span class="line">                       :value&#x3D;&quot;&#123;name: item.name, id: item.id&#125;&quot;</span><br><span class="line">                       v-for&#x3D;&quot;item in objArr&quot;</span><br><span class="line">                       :key&#x3D;&quot;item.id&quot;&gt;&lt;&#x2F;el-option&gt;</span><br><span class="line">            &#x2F;&#x2F; 注意 value的写法，可以直接写成 :value&#x3D;&quot;item&quot; ,如果不希望form.chooseObj里面的数据太杂，也可以写成上面的这种</span><br><span class="line">        &lt;&#x2F;el-select&gt;</span><br><span class="line">    &lt;&#x2F;el-form-item&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">		return &#123;</span><br><span class="line">			form: &#123; </span><br><span class="line">                chooseObj: &#123;&#125;, &#x2F;&#x2F; 选中的数据对象</span><br><span class="line">             &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">        &#x2F;&#x2F; 省略接口请求，假设请求返回对象data，里面包含选项的 id 和 name</span><br><span class="line">        let data &#x3D; &#123;</span><br><span class="line">            id: &#39;1&#39;,</span><br><span class="line">            name: &#39;语文&#39;</span><br><span class="line">        &#125;;</span><br><span class="line">        this.getData(data);</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        &#x2F;&#x2F; 从接口获取当前所选的数据，渲染至页面</span><br><span class="line">        getData(data) &#123;</span><br><span class="line">            this.form.chooseObj.id &#x3D; data.id;</span><br><span class="line">            this.form.chooseObj.name &#x3D; data.name;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 保存时</span><br><span class="line">        save() &#123;</span><br><span class="line">            let id &#x3D; this.form.chooseObj.id,</span><br><span class="line">                name &#x3D; this.form.chooseObj.name;</span><br><span class="line">            &#x2F;&#x2F; 保存接口请求发起...</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ElementUI</category>
      </categories>
  </entry>
  <entry>
    <title>pdf.js+canvas+vue实现h5预览pdf文件（支持放大缩小）</title>
    <url>/2020/07/07/pdf-js-canvas-vue%E5%AE%9E%E7%8E%B0h5%E9%A2%84%E8%A7%88pdf%E6%96%87%E4%BB%B6%EF%BC%88%E6%94%AF%E6%8C%81%E6%94%BE%E5%A4%A7%E7%BC%A9%E5%B0%8F%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>实现思路：引入了pdfjs-dist的npm包，从后端拿到pdf的数据之后（base64），利用pdf.js拿到pdf相关信息，然后创建一个canvas（我这里是pdf的一页作为一个canvas标签），再经由pdf.js进行最后一系列的渲染</p>
</blockquote>
<a id="more"></a>

<p>前期准备：</p>
<p>引入npm包 <code>pdfjs-dist@2.4.456</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install pdfjs-dist --save &#x2F;&#x2F; --save保存依赖</span><br><span class="line"></span><br><span class="line">cnpm install pdfjs-dist --save &#x2F;&#x2F; 也可以用cnpm</span><br><span class="line"></span><br><span class="line">npm install pdfjs-dist@2.4.456 --save &#x2F;&#x2F; 如果想要指定版本</span><br></pre></td></tr></table></figure>

<p>核心API：</p>
<p><code>getDocument()</code>：用于异步获取PDf文档，发送多个Ajax请求以块的形式下载文档。它返回一个Promise，该Promise的成功回调传递一个对象，该对象包含PDF文档的信息，该回调中的代码将在完成PDf文档获取时执行。</p>
<p><code>getPage()</code>：用于获取PDF文档中的各个页面。</p>
<p><code>getViewport()</code>：针对提供的展示比例，返回PDf文档的页面尺寸。</p>
<p><code>render()</code>：渲染PDF。</p>
<p>注意：</p>
<ol>
<li>如果有报类似的错误：<code>PDFDocumentLoadingTask.then method use the</code>promise<code>getter instead.</code>，检查一下在代码中的.then前面有没有加<code>promise</code></li>
<li>btoa和atob是window对象的两个函数，其中btoa是binary to ascii，用于将binary的数据用ascii码表示，即Base64的编码过程，而atob则是ascii to binary，用于将ascii码解析成binary数据</li>
<li>报错<code>Cannot read property &#39;WorkerMessageHandler&#39; of undefined</code>，一般是<code>PDF.GlobalWorkerOptions.workerSrc</code>的url不对，即没有正确引入pdf.work.js</li>
</ol>
<h3 id="代码如下，具体看注释，踩过了很多坑，都写在注释里了："><a href="#代码如下，具体看注释，踩过了很多坑，都写在注释里了：" class="headerlink" title="代码如下，具体看注释，踩过了很多坑，都写在注释里了："></a>代码如下，具体看注释，踩过了很多坑，都写在注释里了：</h3><p>pdf.vue</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"canvas-area"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 拿到pdf后会动态往这里添加canvas元素，有多少页就有多少个canvas --&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"control"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 点击放大 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scale-btn"</span> @<span class="attr">click</span>=<span class="string">"scalePDF('add')"</span>&gt;</span>＋<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 点击缩小 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"scale-btn"</span> @<span class="attr">click</span>=<span class="string">"scalePDF"</span>&gt;</span>－<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 引入pdf.js，负责API解析</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> PDF <span class="keyword">from</span> <span class="string">'pdfjs-dist'</span>;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 引入pdf.worker.js，负责核心解析</span></span></span><br><span class="line"><span class="actionscript">    PDF.GlobalWorkerOptions.workerSrc = <span class="string">'https://cdn.bootcss.com/pdf.js/2.4.456/pdf.worker.js'</span>;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 网上其他文章写着下面这样引入pdf.worker.js，但我这边会报错，所以找了上面这一个cdn链接，但需注意：我看网上有文章引入的链接是需要翻墙的，但总不能要求用户在使用过程中一定要翻墙吧？所以一定要找大陆能直接访问的链接</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// PDF.GlobalWorkerOptions.workerSrc = 'pdfjs-dist/build/pdf.worker.js';</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"pdf"</span>,</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                pdfView: &#123;&#125;, <span class="comment">// 缓存pdf数据</span></span></span><br><span class="line"><span class="actionscript">                pdfScale: <span class="number">1</span>, <span class="comment">// 当前缩放</span></span></span><br><span class="line"><span class="actionscript">                pdfScaleMax: <span class="number">2</span>, <span class="comment">// 最大缩放</span></span></span><br><span class="line"><span class="actionscript">                pdfScaleMin: <span class="number">0.4</span>, <span class="comment">// 最小缩放</span></span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.getPDF();</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            getPDF() &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 这个链接是引入字体包，解决无法显示中文的问题</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">const</span> CURL = <span class="string">'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.4.456/cmaps/'</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> base64Data,</span></span><br><span class="line">                    pdfData,</span><br><span class="line">                    loadingTask;</span><br><span class="line">                    </span><br><span class="line"><span class="actionscript">                base64Data = <span class="string">'JVBERi0xLjcKCjEgMCBvYmogICUgZW50cnkgcG9pbnQKPDwKICAvVHlwZSAvQ2F0YWxvZwog'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'IC9QYWdlcyAyIDAgUgo+PgplbmRvYmoKCjIgMCBvYmoKPDwKICAvVHlwZSAvUGFnZXMKICAv'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'TWVkaWFCb3ggWyAwIDAgMjAwIDIwMCBdCiAgL0NvdW50IDEKICAvS2lkcyBbIDMgMCBSIF0K'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'Pj4KZW5kb2JqCgozIDAgb2JqCjw8CiAgL1R5cGUgL1BhZ2UKICAvUGFyZW50IDIgMCBSCiAg'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'L1Jlc291cmNlcyA8PAogICAgL0ZvbnQgPDwKICAgICAgL0YxIDQgMCBSIAogICAgPj4KICA+'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'PgogIC9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKCjQgMCBvYmoKPDwKICAvVHlwZSAvRm9u'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'dAogIC9TdWJ0eXBlIC9UeXBlMQogIC9CYXNlRm9udCAvVGltZXMtUm9tYW4KPj4KZW5kb2Jq'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'Cgo1IDAgb2JqICAlIHBhZ2UgY29udGVudAo8PAogIC9MZW5ndGggNDQKPj4Kc3RyZWFtCkJU'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'CjcwIDUwIFRECi9GMSAxMiBUZgooSGVsbG8sIHdvcmxkISkgVGoKRVQKZW5kc3RyZWFtCmVu'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'ZG9iagoKeHJlZgowIDYKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDEwIDAwMDAwIG4g'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'CjAwMDAwMDAwNzkgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAw'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'MDAwIG4gCjAwMDAwMDAzODAgMDAwMDAgbiAKdHJhaWxlcgo8PAogIC9TaXplIDYKICAvUm9v'</span> +</span></span><br><span class="line"><span class="actionscript">                    <span class="string">'dCAxIDAgUgo+PgpzdGFydHhyZWYKNDkyCiUlRU9G'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                pdfData = atob(base64Data); <span class="comment">// 解码base64，这里的base64应由后台接口返回，示例中省了接口请求的步骤，直接写死数据</span></span></span><br><span class="line">                </span><br><span class="line"><span class="actionscript">                <span class="comment">// 加载要打开的pdf</span></span></span><br><span class="line">                loadingTask = PDF.getDocument(&#123;</span><br><span class="line"><span class="actionscript">                    data: pdfData, <span class="comment">// 解码base64之后的数据</span></span></span><br><span class="line"><span class="actionscript">                    cMapUrl: CURL, <span class="comment">// 无法显示中文的话，就添加下面这两个cMapUrl、cMapPacked参数</span></span></span><br><span class="line"><span class="actionscript">                    cMapPacked: <span class="literal">true</span></span></span><br><span class="line">                &#125;);</span><br><span class="line">                </span><br><span class="line"><span class="actionscript">                <span class="comment">// 网上有文章是下面这样用的，但是有可能会中文显示不了。这里的url是pdf在线地址，或者是pdf本地路径，以.pdf结尾</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// loadingTask = PDF.getDocument(pdfURL);</span></span></span><br><span class="line">                </span><br><span class="line"><span class="javascript">                loadingTask.promise.then(<span class="function"><span class="params">pdf</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.pdfView = pdf; <span class="comment">// 缓存pdf文档相关信息，当用户缩放时不必再次请求数据</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> pageCount = pdf.numPages; <span class="comment">// 获取pdf总页数</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= pageCount; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">this</span>.addPage(i, pageCount); <span class="comment">// 循环总页数，生成canvas</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, err =&gt; &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'文档生成发生异常：'</span>, err);</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 添加canvas元素，每一页为一个canvas，pageNumber为当前页，pageCount为总页数</span></span></span><br><span class="line">            addPage(pageNumber, pageCount) &#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.pdfView.getPage(pageNumber).then(<span class="function"><span class="params">page</span> =&gt;</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> viewport,</span></span><br><span class="line">                        canvas,</span><br><span class="line">                        el_canvasDiv,</span><br><span class="line">                        context,</span><br><span class="line">                        renderContext,</span><br><span class="line">                        renderTask;</span><br><span class="line"></span><br><span class="line"><span class="javascript">                    canvas = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>); <span class="comment">//在页面中创建canvas</span></span></span><br><span class="line"><span class="actionscript">                    canvas.id = <span class="string">"canvas_"</span> + pageNumber; <span class="comment">// 给每个canvas元素添加id</span></span></span><br><span class="line"><span class="javascript">                    el_canvasDiv = <span class="built_in">document</span>.querySelector(<span class="string">'#canvas-area'</span>);</span></span><br><span class="line"><span class="actionscript">                    el_canvasDiv.appendChild(canvas); <span class="comment">// 追加子元素到canvas-area</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                    context = canvas.getContext(<span class="string">'2d'</span>); <span class="comment">// 获取作用于画布的API</span></span></span><br><span class="line"><span class="actionscript">                    viewport = page.getViewport(&#123;scale: <span class="keyword">this</span>.pdfScale&#125;); <span class="comment">// 根据自定义的缩放倍数以及文档返回的比例，获取在页面展示的宽高</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 注意网上有文章的传参是下面这样写的，会报错：</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// viewport = page.getViewport(this.pdfScale);</span></span></span><br><span class="line"><span class="actionscript">                    canvas.height = viewport.height; <span class="comment">// 赋值</span></span></span><br><span class="line">                    canvas.width = viewport.width;</span><br><span class="line">                    </span><br><span class="line">                    renderContext = &#123;</span><br><span class="line"><span class="actionscript">                        canvasContext: context, <span class="comment">// 内容</span></span></span><br><span class="line"><span class="actionscript">                        viewport: viewport <span class="comment">// 视口</span></span></span><br><span class="line">                    &#125;;</span><br><span class="line"><span class="actionscript">                    renderTask = page.render(renderContext); <span class="comment">// 开始渲染</span></span></span><br><span class="line"><span class="javascript">                    renderTask.promise.then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// 渲染完毕后的业务操作</span></span></span><br><span class="line">                        if (pageNumber === pageCount) &#123;</span><br><span class="line"><span class="actionscript">                            <span class="comment">// 当渲染完最后一页，说明渲染完毕</span></span></span><br><span class="line"><span class="javascript">                            <span class="built_in">console</span>.log(<span class="string">'渲染完成'</span>);</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 注意这里网上有人会写成下面这样，会报错，需要加promise</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// renderTask.then(() =&gt; &#123;&#125;)</span></span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 缩放pdf，这里是把原来的canvas删除重新按新的缩放倍数生成新的canvas</span></span></span><br><span class="line">            scalePDF(type) &#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (type === <span class="string">'add'</span> &amp;&amp; <span class="keyword">this</span>.pdfScale === <span class="keyword">this</span>.pdfScaleMax) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'已缩放至最大'</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (type !== <span class="string">'add'</span> &amp;&amp; <span class="keyword">this</span>.pdfScale === <span class="keyword">this</span>.pdfScaleMin) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'已缩放至最小'</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">return</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (type === <span class="string">'add'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// calculate是自己定义的公共对象，四则运算，加和减</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.pdfScale = calculate.add(<span class="keyword">this</span>.pdfScale, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.pdfScale = calculate.sub(<span class="keyword">this</span>.pdfScale, <span class="number">0.2</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> parentNode = <span class="built_in">document</span>.getElementById(<span class="string">'canvasDiv'</span>),</span></span><br><span class="line"><span class="javascript">                    canvasElements = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'canvas'</span>),</span></span><br><span class="line"><span class="actionscript">                    pageCount = <span class="keyword">this</span>.pdfView.numPages;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 删除原有的canvas元素</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i=canvasElements.length<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span></span><br><span class="line">                    parentNode.removeChild(canvasElements[i]);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 重新生成</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= pageCount; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.addPage(i, pageCount);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#canvas-area</span> &#123;</span></span><br><span class="line">        overflow: auto;</span><br><span class="line">        text-align: center;</span><br><span class="line">        canvas &#123;</span><br><span class="line">            border: 2px solid red;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.control</span> &#123;</span></span><br><span class="line">        position: fixed;</span><br><span class="line"><span class="css">        <span class="selector-tag">right</span>: <span class="selector-class">.2rem</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">bottom</span>: 1<span class="selector-class">.5rem</span>;</span></span><br><span class="line">        width: 1rem;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span>: 1<span class="selector-class">.8rem</span>;</span></span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        align-items: center;</span><br><span class="line">        justify-content: space-between;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.scale-btn</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#e2e2e2</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span>: <span class="selector-class">.76rem</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">height</span>: <span class="selector-class">.76rem</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">line-height</span>: <span class="selector-class">.76rem</span>;</span></span><br><span class="line">        text-align: center;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        z-index: 99;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: <span class="selector-class">.3rem</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参考资料：</p>
<p><em>官方文档： <a href="http://mozilla.github.io/pdf.js/" target="_blank" rel="noopener">http://mozilla.github.io/pdf.js/</a></em></p>
<p><em><a href="https://www.jianshu.com/p/9cd4840f9323" target="_blank" rel="noopener">https://www.jianshu.com/p/9cd4840f9323</a></em></p>
<p><em><a href="https://segmentfault.com/a/1190000016963084" target="_blank" rel="noopener">https://segmentfault.com/a/1190000016963084</a></em></p>
<p><em><a href="https://stackoverflow.com/questions/58375825/viewport-problem-using-javascript-pdf-js-viewport" target="_blank" rel="noopener">https://stackoverflow.com/questions/58375825/viewport-problem-using-javascript-pdf-js-viewport</a></em></p>
<p><em><a href="https://my.oschina.net/itblog/blog/1613977" target="_blank" rel="noopener">https://my.oschina.net/itblog/blog/1613977</a></em></p>
<p><em><a href="https://github.com/mozilla/pdf.js/issues/11787" target="_blank" rel="noopener">https://github.com/mozilla/pdf.js/issues/11787</a></em></p>
]]></content>
      <categories>
        <category>canvas</category>
      </categories>
  </entry>
  <entry>
    <title>uni小程序富文本组件处理图片宽度溢出</title>
    <url>/2020/05/15/uni%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BB%84%E4%BB%B6%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E5%AE%BD%E5%BA%A6%E6%BA%A2%E5%87%BA/</url>
    <content><![CDATA[<p>接口返回文本编辑器的内容字段后，进行如下处理：</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let str;</span><br><span class="line">str &#x3D; res.data.content || &#39;&#39;; &#x2F;&#x2F; 获取接口返回</span><br><span class="line">str &#x3D; str.replace(&#x2F;&lt;&#x2F;g, &#39;&lt;&#39;) </span><br><span class="line">.replace(&#x2F;&gt;&#x2F;g, &#39;&gt;&#39;)</span><br><span class="line">.replace(&#x2F;&lt;img([\s\w&quot;-&#x3D;\&#x2F;\.:;]+)((?:(height&#x3D;&quot;[^&quot;]+&quot;)))&#x2F;ig, &#39;&lt;img$1&#39;)</span><br><span class="line">.replace(&#x2F;&lt;img([\s\w&quot;-&#x3D;\&#x2F;\.:;]+)((?:(width&#x3D;&quot;[^&quot;]+&quot;)))&#x2F;ig, &#39;&lt;img$1&#39;)</span><br><span class="line">.replace(&#x2F;&lt;img([\s\w&quot;-&#x3D;\&#x2F;\.:;]+)((?:(style&#x3D;&quot;[^&quot;]+&quot;)))&#x2F;ig, &#39;&lt;img$1&#39;)</span><br><span class="line">.replace(&#x2F;&lt;img([\s\w&quot;-&#x3D;\&#x2F;\.:;]+)((?:(alt&#x3D;&quot;[^&quot;]+&quot;)))&#x2F;ig, &#39;&lt;img$1&#39;)</span><br><span class="line">.replace(&#x2F;&lt;img([\s\w&quot;-&#x3D;\&#x2F;\.:;]+)&#x2F;ig, &#39;&lt;img style&#x3D;&quot;width: 100%;&quot; $1&#39;);</span><br></pre></td></tr></table></figure>

<p>处理后宽度就不会溢出了：<br><img src="/.io//pic.png" alt="pic"></p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>uni小程序页面获取传参</title>
    <url>/2020/05/15/uni%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E8%8E%B7%E5%8F%96%E4%BC%A0%E5%8F%82/</url>
    <content><![CDATA[<h4 id="前一个页面传值给下一个页面"><a href="#前一个页面传值给下一个页面" class="headerlink" title="前一个页面传值给下一个页面"></a>前一个页面传值给下一个页面</h4><blockquote>
<p>uni.navigateTo(); 保留当前页面，跳转到应用内的某个页面，使用uni.navigateBack() 可以返回到原页面</p>
</blockquote>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uni.navigateTo(&#123;</span><br><span class="line">    url: &#39;test?id&#x3D;1&amp;name&#x3D;&#39; + encodeURIComponent(JSON.stringify(name))</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>注意：url传参有长度限制，太长时可通过对参数进行 转码+序列化 的方法传过去</p>
<p>在下一个页面接收值（需要相应的反序列化、解码）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onLoad(e) &#123;</span><br><span class="line">	this.id &#x3D; e.id;</span><br><span class="line">	this.name &#x3D; JSON.parse(decodeURIComponent(e.name));</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="下一个页面在返回前传值给前一个页面"><a href="#下一个页面在返回前传值给前一个页面" class="headerlink" title="下一个页面在返回前传值给前一个页面"></a>下一个页面在返回前传值给前一个页面</h4><p>举例，从A页面通过navigateTo到B页面，B页面有一个参数需要传回给A页面，在B页面可进行如下操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let pages &#x3D; getCurrentPages();  &#x2F;&#x2F;获取所有页面栈实例列表</span><br><span class="line">let nowPage &#x3D; pages[ pages.length - 1];  &#x2F;&#x2F;当前页页面实例</span><br><span class="line">let prevPage &#x3D; pages[ pages.length - 2 ];  &#x2F;&#x2F;上一页页面实例</span><br><span class="line">prevPage.$vm.searchVal &#x3D; 1211;   &#x2F;&#x2F;修改上一页data里面的searchVal参数值为1211</span><br><span class="line">uni.navigateBack(&#123;  &#x2F;&#x2F;uni.navigateTo跳转的返回，如果带任何参数配置，默认返回上一级</span><br><span class="line">	delta: 1</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">————————————————</span><br><span class="line">原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_42231156&#x2F;java&#x2F;article&#x2F;details&#x2F;99674176</span><br></pre></td></tr></table></figure>

<p>注意，B页面在返回时已经对A页面的searchVal的值进行了修改，如果需要触发A页面的相关操作，则需要在A页面的onShow页面周期中进行触发</p>
<p>另一种修改A页面的值的方法如下（替换上面的prevPage.$vm.searchVal = 1211），但是个人没试过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">prevPage.setData(&#123;</span><br><span class="line">    searchVal: 1211,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="通过好友链接分享传值"><a href="#通过好友链接分享传值" class="headerlink" title="通过好友链接分享传值"></a>通过好友链接分享传值</h4><p>有时候会有这样的情景：分享详情页时，当另一个人从分享链接打开进到这个页面时，需要一个id才能请求接口获取详情数据，因此就需要在分享的时候把这个id传过来，在打开的时候拿到这个id去请求数据</p>
<p>在于onShow生命周期同级加入onShareAppMessage函数，才能开启页面分享</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onShareAppMessage() &#123;</span><br><span class="line">	<span class="comment">// 转发</span></span><br><span class="line">	wx.showShareMenu(&#123;</span><br><span class="line">	  withShareTicket: <span class="literal">true</span></span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">return</span> &#123;</span><br><span class="line">		title: title, <span class="comment">// 分享链接的title</span></span><br><span class="line">		path: <span class="string">'/xxx/xxx?id=1234'</span>, <span class="comment">// 分享打开时的页面路径</span></span><br><span class="line">		imageUrl: imageUrl, <span class="comment">// 分享链接的图片</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当好友从链接打开时，页面会走到上面path定义的路径当中，这时候要获取id，方法和上一种url传参一样，在页面onLoad生命周期中获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onLoad(e) &#123;</span><br><span class="line">	<span class="built_in">console</span>.log(e.id);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="通过扫二维码进来的页面如何获取传参值"><a href="#通过扫二维码进来的页面如何获取传参值" class="headerlink" title="通过扫二维码进来的页面如何获取传参值"></a>通过扫二维码进来的页面如何获取传参值</h4><p>二维码扫码进来，要获取生成二维码时传的自定义参数，也和上面类似方式获取，只不过相当于小程序自动加了一个scene字段存储传参信息，获取如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onLoad(e) &#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="built_in">decodeURIComponent</span>(e.scene));</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>注意一定要对scene字段进行decodeURIComponent处理</p>
<p>关于二维码限制传参长度（只有几十个字符）的问题，一般的做法是，将所需的传参先走我们自己的接口，在后台临时存储，然后后台生成一个类似缓存ID的标识（长度一定不能超过微信的限制），再把缓存ID通过生成二维码的接口传过去去获取二维码。在扫码打开后的页面，通过decodeURIComponent(e.scene)获取到的值，就是缓存ID，此时再通过自己的接口，用缓存ID去查询生成二维码时候的传参</p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>小程序(uni)在页面传参时布尔值失效的问题</title>
    <url>/2020/06/05/%E5%B0%8F%E7%A8%8B%E5%BA%8F-uni-%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%BC%A0%E5%8F%82%E6%97%B6%E5%B8%83%E5%B0%94%E5%80%BC%E5%A4%B1%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>在开发过程中发现了一个不太起眼但很重要的问题，也是踩坑踩过来的。先看下面这段小程序A页面传值到B页面的代码</p>
<a id="more"></a>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A页面</span></span><br><span class="line">methods: &#123;</span><br><span class="line">    viewB() &#123;</span><br><span class="line">        <span class="keyword">let</span> id = <span class="string">'123'</span>,</span><br><span class="line">            isHide = <span class="literal">true</span>,</span><br><span class="line">        uni.navigateTo(&#123;</span><br><span class="line">            url: <span class="string">'/pages/demo/b?id='</span> + id + <span class="string">'&amp;isHide='</span> isHide,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// B页面 接收值</span></span><br><span class="line">onLoad(e) &#123;</span><br><span class="line">    <span class="keyword">this</span>.isHide = e.isHide;</span><br><span class="line">    <span class="keyword">this</span>.id = e.id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看起来没什么问题，传参有两个，字符传类型<code>id</code> 和 布尔值类型<code>isHide</code>。在B页面的onLoad周期中也能正常接收到这两个值。</p>
<p>因为<code>isHide</code>是A页面去控制B页面的按钮是否显示的，但是在B页面中发现无论<code>isHide</code>是<code>true</code>还是<code>false</code>，都无法正常控制按钮的显示与隐藏</p>
<p>仔细排查确认代码没写错之后，<strong>在小程序调试工具中偶然发现A页面带过来的布尔类型<code>isHide</code>，到了B页面却莫名其妙的变成了字符串类型</strong></p>
<p>也就是说，在A页面 <code>isHide: true;</code> 但是在B页面 <code>isHide: &#39;true&#39;</code>;</p>
<p>初步猜想是url传参的时候，布尔值被转成了字符串，所以我又尝试了以对象的形式去传参，如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A页面</span></span><br><span class="line">methods: &#123;</span><br><span class="line">    viewB() &#123;</span><br><span class="line">        <span class="keyword">let</span> params: &#123;</span><br><span class="line">            id: <span class="string">'123'</span>,</span><br><span class="line">            isHide: <span class="literal">true</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        uni.navigateTo(&#123;</span><br><span class="line">            url: <span class="string">'/pages/demo/b?params='</span> + <span class="built_in">encodeURIComponent</span>(<span class="built_in">JSON</span>.stringify(params)),</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// B页面 接收值</span></span><br><span class="line">onLoad(e) &#123;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="built_in">JSON</span>.parse(<span class="built_in">decodeURIComponent</span>(e.params));</span><br><span class="line">    <span class="keyword">this</span>.isHide = obj.isHide; <span class="comment">// 这里拿到的isHide不会被转成字符串</span></span><br><span class="line">    <span class="keyword">this</span>.id = obj.id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样页面就正常了</p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>小程序(基于uni)常用的应用生命周期&amp;页面生命周期</title>
    <url>/2020/05/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%9F%BA%E4%BA%8Euni-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-%E9%A1%B5%E9%9D%A2%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[<blockquote>
<p>常用应用生命周期</p>
</blockquote>
<a id="more"></a>

<table>
<thead>
<tr>
<th align="left">函数名</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">onLaunch</td>
<td align="left">当uni-app 初始化完成时触发（全局只触发一次）</td>
</tr>
<tr>
<td align="left">onShow</td>
<td align="left">当 uni-app 启动，或从后台进入前台显示</td>
</tr>
<tr>
<td align="left">onHide</td>
<td align="left">当 uni-app 从前台进入后台</td>
</tr>
<tr>
<td align="left">onError</td>
<td align="left">当 uni-app 报错时触发</td>
</tr>
</tbody></table>
<ul>
<li>应用生命周期仅可在App.vue中监听，在其它页面监听无效</li>
<li>调用顺序：onLaunch &gt; onShow &gt; onHide</li>
</ul>
<blockquote>
<p>常用页面生命周期</p>
</blockquote>
<p>详见uni官方文档</p>
<ul>
<li>当每进入/切换到一个新的页面的时候，就会调用页面生命周期函数</li>
<li>调用顺序：onLoad &gt; onReady &gt; onShow &gt; onHide</li>
</ul>
<p>参考来源：<br><em><a href="https://www.jianshu.com/p/3f43eaa83bbd" target="_blank" rel="noopener">https://www.jianshu.com/p/3f43eaa83bbd</a></em></p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>小程序嵌H5传参</title>
    <url>/2020/06/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B5%8CH5%E4%BC%A0%E5%8F%82/</url>
    <content><![CDATA[<p>小程序嵌H5之前，必须要先配置H5对应的域名，以及在H5域名服务器下放入小程序提供的校验文件，具体查看官方文档</p>
<a id="more"></a>

<p>因为 我没操作过。。。</p>
<p>这里只说代码传参</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 小程序页面，url就是要访问H5的url --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-view</span> <span class="attr">src</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">web-view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>举个例子，我这里项目的url格式是下面这样子的：前半部分固定路径 + 传参 + 业务路由</p>
<p><code>https://xxxxx.com/demo/index.html?access_token={access_token}&amp;id={id}#/school/grade4/class4</code></p>
<p><code>？</code>后的是传参，<code>#</code>后的是业务路由</p>
<p>这里小程序给H5传了两个参数，<code>access_token</code> 和 <code>id</code></p>
<p>H5获取参数如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// H5页面接收参数（项目用的是vue框架）</span></span><br><span class="line">created() &#123;</span><br><span class="line">    <span class="keyword">let</span> id = <span class="keyword">this</span>.getKey(<span class="string">'id'</span>);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"> &#125;,</span><br><span class="line"> methods: &#123;</span><br><span class="line">    <span class="comment">// 获取小程序请求url中的传参</span></span><br><span class="line">    getKey(key) &#123;</span><br><span class="line">      <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;)"</span> + key + <span class="string">"=([^&amp;]*)(&amp;|$)"</span>),</span><br><span class="line">          r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">      <span class="keyword">if</span> (r !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(r[<span class="number">2</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>微信小程序(uni)拍照或选取相册图片进行上传、图片预览</title>
    <url>/2020/06/13/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-uni-%E6%8B%8D%E7%85%A7%E6%88%96%E9%80%89%E5%8F%96%E7%9B%B8%E5%86%8C%E5%9B%BE%E7%89%87%E8%BF%9B%E8%A1%8C%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<p>如题，记录一下相关api使用方法，对一些值的处理需要注意</p>
<a id="more"></a>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 拍照或从相册选择图片</span></span><br><span class="line">takePhoto() &#123;</span><br><span class="line">    uni.chooseImage(&#123;</span><br><span class="line">        count: <span class="number">1</span>, <span class="comment">// 默认9，1为只能选择单张上传</span></span><br><span class="line">        success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> pic = res.tempFilePaths;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'图片本地临时路径：'</span>, pic[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">this</span>.uploadPic(pic[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传本地资源到服务器</span></span><br><span class="line">uploadPic(file) &#123;</span><br><span class="line">    uni.uploadFile(&#123;</span><br><span class="line">        url: <span class="string">'自己的上传图片的接口url'</span>,</span><br><span class="line">        fileType: <span class="string">'image'</span>,</span><br><span class="line">        filePath: file,</span><br><span class="line">        name: <span class="string">'file'</span>,</span><br><span class="line">        formData: &#123; <span class="comment">// 自己这边的上传接口传参</span></span><br><span class="line">            file: file,</span><br><span class="line">            token: uni.getStorageSync(<span class="string">'token'</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> r = <span class="built_in">JSON</span>.parse(res.data); <span class="comment">// 注意这里uploadFile返回的结果是字符串，需要转成对象</span></span><br><span class="line">            <span class="comment">// 后续的业务操作...</span></span><br><span class="line">        &#125;,</span><br><span class="line">        fail: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            uni.showToast(&#123;  </span><br><span class="line">                title: <span class="string">'图片上传错误'</span>,  </span><br><span class="line">                duration: <span class="number">2000</span>,</span><br><span class="line">                icon: <span class="string">'none'</span>,</span><br><span class="line">            &#125;);  </span><br><span class="line">        &#125;,</span><br><span class="line">        complete: <span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>图片预览，单张为例</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">showPic(url) &#123;</span><br><span class="line">    if (!url) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    uni.previewImage(&#123;</span><br><span class="line">        current: 0,</span><br><span class="line">        urls: [url],</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>微信小程序(uni)通过地图选择地址、根据地址查看地图(进行导航)</title>
    <url>/2020/06/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-uni-%E9%80%9A%E8%BF%87%E5%9C%B0%E5%9B%BE%E9%80%89%E6%8B%A9%E5%9C%B0%E5%9D%80%E3%80%81%E6%A0%B9%E6%8D%AE%E5%9C%B0%E5%9D%80%E6%9F%A5%E7%9C%8B%E5%9C%B0%E5%9B%BE-%E8%BF%9B%E8%A1%8C%E5%AF%BC%E8%88%AA/</url>
    <content><![CDATA[<blockquote>
<p>通过地图选择地址</p>
</blockquote>
<a id="more"></a>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 选择地址</span></span><br><span class="line">getAddressByMap() &#123;</span><br><span class="line">    uni.authorize(&#123;</span><br><span class="line">        scope: <span class="string">'scope.userLocation'</span>, <span class="comment">// 查询该权限项是否已开启</span></span><br><span class="line">        success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 成功获取授权，调用获取位置api</span></span><br><span class="line">            uni.chooseLocation(&#123;</span><br><span class="line">                success:<span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'位置名称：'</span> + r.name);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'详细地址：'</span> + r.address);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'纬度：'</span> + r.latitude);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">'经度：'</span> + r.longitude);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 如果用户没有授权过或者拒绝了获取地理位置的权限，会走到这里</span></span><br><span class="line">            uni.showModal(&#123;</span><br><span class="line">                title: <span class="string">'温馨提示'</span>,</span><br><span class="line">                content: <span class="string">'您尚未开启定位,请先开启'</span>,</span><br><span class="line">                confirmText: <span class="string">'去设置'</span>,</span><br><span class="line">                success(res)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (res.confirm) &#123;</span><br><span class="line">                        <span class="comment">//打开授权设置</span></span><br><span class="line">                        uni.openSetting(&#123;</span><br><span class="line">                          success: <span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">                            <span class="built_in">console</span>.log(r.authSetting);</span><br><span class="line">                          &#125;,</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>思路：</p>
<p>一定要先使用<code>authorize</code>查询是否授权，如果不这样做，直接使用<code>chooseLocation</code>，会有一种情况就是假如用户第一次拒绝了权限申请，那么后面便无法再次触发<code>chooseLocation</code></p>
<p>所以使用了<code>authorize</code>查询授权情况后，如果用户授权，便调用<code>chooseLocation</code>；如果用户没有授权，便提示让用户先去开启获取地理位置权限项</p>
<p>在<code>openSetting</code>（即让用户去开启权限项）之前，有两个步骤需要做：</p>
<ol>
<li><p>一定要加上<code>showModal</code>，询问用户是否要去开启权限项，只有用户主动调用，<code>openSetting</code>才会正常打开，否则，直接调用的话将没有任何反应</p>
</li>
<li><p>创建app.json，加上权限选择配置，如下：</p>
</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"permission"</span>: &#123;</span><br><span class="line">	  <span class="attr">"scope.userLocation"</span>: &#123;</span><br><span class="line">	    <span class="attr">"desc"</span>: <span class="string">"你的位置信息将用于小程序位置接口的效果展示"</span></span><br><span class="line">	  &#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>根据地址查看地图(进行导航)，以腾讯地图为例</p>
</blockquote>
<p>准备：腾讯地图的jssdk 和 地图密钥</p>
<p>先使用jssdk，查询地址对应的经纬度相应信息，然后将经纬度传给uni提供的api： <code>openLocation</code>即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> QQMap <span class="keyword">from</span> <span class="string">'./qqmap-wx-jssdk.js'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            mapsdk: <span class="literal">null</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    onLoad(e) &#123;</span><br><span class="line">        <span class="comment">// 实例化 腾讯地图构造函数</span></span><br><span class="line">        <span class="keyword">this</span>.mapsdk = <span class="keyword">new</span> QQMapWX(&#123;</span><br><span class="line">            key: <span class="string">'申请的密钥'</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        <span class="comment">// 在地图中查看地址</span></span><br><span class="line">        addressInMap() &#123;</span><br><span class="line">            <span class="keyword">this</span>.mapsdk.geocoder(&#123;</span><br><span class="line">                address: <span class="string">'地址：如广东省深圳市深圳大学'</span>,</span><br><span class="line">                success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 调起地图</span></span><br><span class="line">                    wx.openLocation(&#123;</span><br><span class="line">                        latitude: res.result.location.lat,</span><br><span class="line">                        longitude: res.result.location.lng,</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">                fail: <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 这里是防止地址不合法，怕查不到对应经纬度，提示一下用户</span></span><br><span class="line">                    uni.showToast(&#123;</span><br><span class="line">                        title: <span class="string">'无法定位到该地址，请检查地址准确性'</span>,</span><br><span class="line">                        icon: <span class="string">'none'</span>,</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>每天一道小心机：for循环将接口多个字段push进数组</title>
    <url>/2020/05/20/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E5%B0%8F%E5%BF%83%E6%9C%BA%EF%BC%9Afor%E5%BE%AA%E7%8E%AF%E5%B0%86%E6%8E%A5%E5%8F%A3%E5%A4%9A%E4%B8%AA%E5%AD%97%E6%AE%B5push%E8%BF%9B%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<blockquote>
<p>场景：接口将1~12个月份对应的值用12个字段返回，这12个字段长这样：<code>field1、field2 ... field12</code>，但前端想要将12个字段组装为一个数组去循环生成相应元素，怎么做？</p>
</blockquote>
<a id="more"></a>

<p>json数据：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  field1: '12',</span><br><span class="line">  field2: '2',</span><br><span class="line">  field3: '36',</span><br><span class="line">  <span class="comment">// ... 中间省略</span></span><br><span class="line">  field12: '324'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;<span class="number">12</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> fieldIndex = <span class="string">'field'</span> + (i + <span class="number">1</span>); <span class="comment">// 加上1是因为接口字段从field1开始，没有field0</span></span><br><span class="line">    arr.push(data[fieldIndex]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：push的时候不能直接用<code>data.fieldIndex</code>，这样写实际上js会读取data里面叫<code>fieldIndex</code>变量的值，但在情境中<code>fieldIndex</code>是动态值，因此只能用<code>data[fieldIndex]</code>的方式去访问，又是一个小细节-。-</p>
]]></content>
      <categories>
        <category>每天一道小心机</category>
      </categories>
  </entry>
  <entry>
    <title>总结一些git日常使用命令</title>
    <url>/2020/08/05/%E6%80%BB%E7%BB%93%E4%B8%80%E4%BA%9Bgit%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>日常使用的git命令，记录下</p>
<a id="more"></a>

<h3 style="color: #FF4500;">创建新分支（基于远程分支）</h3>

<blockquote>
<p>基于远程release分支新创建自己的release-bibifeng分支</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout release &#x2F;&#x2F; 切换到release分支</span><br><span class="line">git checkout -b release-bibifeng &#x2F;&#x2F; 创建自己的分支</span><br><span class="line">git push --set-upstream origin release-bibifeng &#x2F;&#x2F; 推到远程仓库并且将本地分支与远程分支关联起来</span><br></pre></td></tr></table></figure>

<h3 style="color: #FF4500;">自己的私人分支merge到公共分支有冲突时</h3>

<blockquote>
<p>以自己分支release-bibifeng 合并到 dev 分支为例</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout dev</span><br><span class="line">git pull &#x2F;&#x2F; 更新分支</span><br><span class="line">git merge --no-ff release-bibifeng</span><br><span class="line">&#x2F;&#x2F; 解决冲突...</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#39;commit message&#39;</span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure>

<h3 style="color: #FF4500;">更新自己的分支以达到与远程分支同步时的操作，即rebase</h3>

<blockquote>
<p>更新远程主分支release到自己的分支release-bibifeng为例</p>
</blockquote>
<p>场景：这里的release-bibifeng是从release拉下来的，但是同时别人也有他自己的分支（也是从release拉下来的），那么大家都会合代码到release分支，一段时间后，远程的分支代码和自己的分支代码就会有差异了，这时候就要定时把远程release分支更新到自己的分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout release &#x2F;&#x2F; 切换并更新本地的release分支</span><br><span class="line">git pull</span><br><span class="line">git checkout release-bibifeng &#x2F;&#x2F; 切换到自己的分支</span><br><span class="line">git pull origin release-bibifeng --rebase</span><br><span class="line">git rebase release &#x2F;&#x2F; 同步release到自己的分支</span><br><span class="line">&#x2F;&#x2F; 解决冲突（如需要）</span><br><span class="line">git push &#x2F;&#x2F; 更新自己的远程分支</span><br></pre></td></tr></table></figure>

<p>用rebase有时候会需要多次fix冲突，注意按照提示去操作，解决冲突之后执行<br>git add .<br>git rebase –continue （这个时候rebase会继续，如果是没有改动的情况，按提示输入git rebase –skip继续执行合并）<br>这里解决冲突和 continue/skip 动作可能会执行多次，直到结束之后，提交到远程</p>
<h3 style="color: #FF4500;">代码回退的两种方式</h3>

<blockquote>
<p>git reset 如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard 目标版本号id</span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure>

<blockquote>
<p>git revert 撤销某一版本的修改,不影响该版本后的提交版本。只单独撤销某一版本，这种改动实质上是“反做”之前的那条提交记录，并生成一条新的记录重新提交上去。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git revert -n xxx版本id</span><br><span class="line">&#x2F;&#x2F; 若有冲突，先手动解决，然后add、commit、push三刀流</span><br></pre></td></tr></table></figure>

<h3 style="color: #FF4500;">删除分支（本地、远程）</h3>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -r &#x2F;&#x2F; 仅查看远程分支</span><br><span class="line">git branch -a &#x2F;&#x2F; 查看所有分支</span><br><span class="line">git push origin --delete xxx分支名 &#x2F;&#x2F; 删除远程分支</span><br><span class="line">git branch -D xxx分支名 &#x2F;&#x2F; 删除本地分支</span><br></pre></td></tr></table></figure>

<p>删除分支时，本地和远程互不影响</p>
<h3 style="color: #FF4500;">重命名自己的分支</h3>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 删除远程分支（以下均为按需操作）</span><br><span class="line">git push --delete origin release-bibifeng</span><br><span class="line">&#x2F;&#x2F; 重命名本地分支</span><br><span class="line">git branch -m release-bibifeng release-old</span><br><span class="line">&#x2F;&#x2F; 将新命名的分支推到远程</span><br><span class="line">git push origin release-old</span><br><span class="line">&#x2F;&#x2F; 本地分支关联远程分支</span><br><span class="line">git branch --set-upstream-to&#x3D;origin&#x2F;release-old</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>解决uni微信小程序在onShareAppMessage中分享传参无法按预设的url传参进行的问题</title>
    <url>/2020/08/10/%E8%A7%A3%E5%86%B3uni%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9C%A8onShareAppMessage%E4%B8%AD%E5%88%86%E4%BA%AB%E4%BC%A0%E5%8F%82%E6%97%A0%E6%B3%95%E6%8C%89%E9%A2%84%E8%AE%BE%E7%9A%84url%E4%BC%A0%E5%8F%82%E8%BF%9B%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<p>问题复现：在进行页面分享相关业务开发时，使用了微信提供的<code>onShareAppMessage</code>的API，其中在预设了<code>path</code>之后，意外的发现无论url后面的传参值怎么变，分享出去之后的url都是默认url，与自己预设的path值不一样</p>
</blockquote>
<a id="more"></a>

<p>一番查找，发现了一个问题。由于我需要在分享时去判断一个接口返回值，从而动态的去改变需要在分享的url中的参数，所以我在<code>onShareAppMessage</code>中使用了promise，期待等接口请求完再生成分享链接</p>
<p>但是事实上，<code>onShareAppMessage</code>是官方已经封装好的，里面并不支持进行同步操作，即使用了promise或者是使用了async、await，虽然代码会按正常顺序执行，但最终分享出去的url，始终都是页面默认url，这与<code>onShareAppMessage</code>内部实现有关</p>
<p>解决办法：将分享时需要的那个接口返回值，提前进行请求（我放在了页面一进来时候去请求），这样在<code>onShareAppMessage</code>就可以直接拿来用，而不用再进行同步接口请求了</p>
<p>去掉了<code>onShareAppMessage</code>中的promise，分享出去的path中的url传参就是正常我们预定义的了</p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>vue-i18n国际化</title>
    <url>/2020/08/31/vue-i18n%E5%9B%BD%E9%99%85%E5%8C%96/</url>
    <content><![CDATA[<blockquote>
<p>在vue项目中使用vue-i18n进行国际化（业务需求，本文例子中只考虑中英互译）</p>
</blockquote>
<a id="more"></a>

<h4 id="安装vue-i18n依赖包"><a href="#安装vue-i18n依赖包" class="headerlink" title="安装vue-i18n依赖包"></a>安装vue-i18n依赖包</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 这里指定了版本，--save写进依赖项</span><br><span class="line">npm i vue-i18n@8.18.1 --save</span><br></pre></td></tr></table></figure>

<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>在项目的src目录下创建一个文件夹用来存放国际化相关的公共配置文件（我以<code>language</code>文件夹为例）</p>
<p>在<code>/src/language</code>文件夹中，新建三个文件：<code>index.js</code>、<code>en-config.json</code>、<code>zh-config.json</code></p>
<p>index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> VueI18n <span class="keyword">from</span> <span class="string">'vue-i18n'</span>;</span><br><span class="line"><span class="comment">// 公共翻译配置 - 中文</span></span><br><span class="line"><span class="keyword">import</span> zh <span class="keyword">from</span> <span class="string">'./zh-config'</span>;</span><br><span class="line"><span class="comment">// 公共翻译配置 - 英文</span></span><br><span class="line"><span class="keyword">import</span> en <span class="keyword">from</span> <span class="string">'./en-config'</span>;</span><br><span class="line">Vue.use(VueI18n);</span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="keyword">const</span> sysLang = navigator.language.split(<span class="string">'-'</span>)[<span class="number">0</span>]; <span class="comment">// 获取当前系统语言</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> i18n = <span class="keyword">new</span> VueI18n(&#123;</span><br><span class="line">	locale: sysLang === <span class="string">'zh'</span> ? <span class="string">'zh'</span> : <span class="string">'en'</span>, <span class="comment">// 当前系统语言为中文（zh开头）时，显示中文，其他一律显示英文（业务需要）</span></span><br><span class="line">	fallbackLocale: <span class="string">'zh'</span>, <span class="comment">// 版本回退中文</span></span><br><span class="line">	messages: &#123;</span><br><span class="line">		zh,</span><br><span class="line">		en,</span><br><span class="line">	&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>zh-config.json 中文配置文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"info"</span>: &#123;</span><br><span class="line">		<span class="attr">"name"</span>: <span class="string">"名称"</span>,</span><br><span class="line">		<span class="attr">"sex"</span>: <span class="string">"性别"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>en-config.json 英文配置文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"info"</span>: &#123;</span><br><span class="line">		<span class="attr">"name"</span>: <span class="string">"name"</span>,</span><br><span class="line">		<span class="attr">"sex"</span>: <span class="string">"sex"</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在项目入口文件 <code>main.js</code> 引入<code>vue-i18n</code>并实例化</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; i18n &#125; <span class="keyword">from</span> <span class="string">'./language/index'</span>;</span><br><span class="line"><span class="comment">// 此处省略其他无关代码...</span></span><br><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    i18n,</span><br><span class="line">    <span class="comment">// 此处省略其他无关代码...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>全局使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;telplate&gt;</span><br><span class="line">    &lt;!-- 姓名：张三 --&gt;</span><br><span class="line">    &lt;!-- name：张三 --&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; $t(&#39;info.name&#39;) &#125;&#125;: 张三&lt;&#x2F;p&gt; </span><br><span class="line">&lt;&#x2F;telplate&gt;</span><br></pre></td></tr></table></figure>

<h4 id="常见业务场景"><a href="#常见业务场景" class="headerlink" title="常见业务场景"></a>常见业务场景</h4><p>如果项目中需要国际化的内容不仅仅是固定的一些文字，比如不同的业务有不同的翻译配置，不仅仅是刚刚上面定义的那些，这时候我们就需要在业务里面写翻译配置文件了</p>
<p>比如我需要在我的业务文件<code>demo.vue</code>中使用国际化</p>
<p>那么在与<code>demo.vue</code>同级目录下新建两个业务翻译配置文件：</p>
<p><code>demo-en.json</code>英文配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"demo"</span>: <span class="string">"demo"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>demo-zh.json</code>中文配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"demo"</span>: <span class="string">"业务示例"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>demo.vue 在业务代码中追加业务翻译配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; $t(&#39;demo&#39;) &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	import zhMap from &#39;.&#x2F;demo-zh&#39;;</span><br><span class="line">	import enMap from &#39;.&#x2F;demo-en&#39;;</span><br><span class="line">	export default &#123;</span><br><span class="line">	    beforeCreate() &#123;</span><br><span class="line">            let lang &#x3D; this.$i18n.locale; &#x2F;&#x2F; 获取当前语言</span><br><span class="line">            if (lang &#x3D;&#x3D;&#x3D; &#39;cn&#39;) &#123;</span><br><span class="line">                &#x2F;&#x2F; 追加自己业务的中文配置</span><br><span class="line">                this.$i18n.mergeLocaleMessage(lang, zhMap);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                &#x2F;&#x2F; 英文</span><br><span class="line">                this.$i18n.mergeLocaleMessage(lang, enMap);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">	&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>国际化</category>
      </categories>
  </entry>
</search>
